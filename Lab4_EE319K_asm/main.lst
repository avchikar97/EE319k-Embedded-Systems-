


ARM Macro Assembler    Page 1 


    1 00000000         ;****************** main.s ***************
    2 00000000         ; Program written by: Akaash Chikarmane/Milan Feliciello
                       
    3 00000000         ; Date Created: 2/22/2016 
    4 00000000         ; Last Modified: 2/29/2016 
    5 00000000         ; Section Tuesday 2-3
    6 00000000         ; Instructor: Ramesh Yerraballi
    7 00000000         ; Lab number: 4
    8 00000000         ; Brief description of the program
    9 00000000         ;   If the switch is presses, the LED toggles at 8 Hz
   10 00000000         ; Hardware connections
   11 00000000         ;  PE1 is switch input  (1 means pressed, 0 means not pr
                       essed)
   12 00000000         ;  PE0 is LED output (1 activates external LED on protob
                       oard) 
   13 00000000         ;Overall functionality of this system is the similar to 
                       Lab 3, with three changes:
   14 00000000         ;1-  initialize SysTick with RELOAD 0x00FFFFFF 
   15 00000000         ;2-  add a heartbeat to PF2 that toggles every time thro
                       ugh loop 
   16 00000000         ;3-  add debugging dump of input, output, and time
   17 00000000         ; Operation
   18 00000000         ; 1) Make PE0 an output and make PE1 an input. 
   19 00000000         ; 2) The system starts with the LED on (make PE0 =1). 
   20 00000000         ;   3) Wait about 62 ms
   21 00000000         ;   4) If the switch is pressed (PE1 is 1), then toggle 
                       the LED once, else turn the LED on. 
   22 00000000         ;   5) Steps 3 and 4 are repeated over and over
   23 00000000         
   24 00000000         
   25 00000000 40024004 
                       SWITCH  EQU              0x40024004  ;PE0
   26 00000000 40024008 
                       LED     EQU              0x40024008  ;PE1
   27 00000000 400FE608 
                       SYSCTL_RCGCGPIO_R
                               EQU              0x400FE608
   28 00000000 00000010 
                       SYSCTL_RCGC2_GPIOE
                               EQU              0x00000010  ; port E Clock Gati
                                                            ng Control
   29 00000000 00000020 
                       SYSCTL_RCGC2_GPIOF
                               EQU              0x00000020  ; port F Clock Gati
                                                            ng Control
   30 00000000 400243FC 
                       GPIO_PORTE_DATA_R
                               EQU              0x400243FC
   31 00000000 40024400 
                       GPIO_PORTE_DIR_R
                               EQU              0x40024400
   32 00000000 40024420 
                       GPIO_PORTE_AFSEL_R
                               EQU              0x40024420
   33 00000000 40024510 
                       GPIO_PORTE_PUR_R
                               EQU              0x40024510
   34 00000000 4002451C 
                       GPIO_PORTE_DEN_R



ARM Macro Assembler    Page 2 


                               EQU              0x4002451C
   35 00000000 400253FC 
                       GPIO_PORTF_DATA_R
                               EQU              0x400253FC
   36 00000000 40025400 
                       GPIO_PORTF_DIR_R
                               EQU              0x40025400
   37 00000000 40025420 
                       GPIO_PORTF_AFSEL_R
                               EQU              0x40025420
   38 00000000 4002551C 
                       GPIO_PORTF_DEN_R
                               EQU              0x4002551C
   39 00000000 E000E010 
                       NVIC_ST_CTRL_R
                               EQU              0xE000E010
   40 00000000 E000E014 
                       NVIC_ST_RELOAD_R
                               EQU              0xE000E014
   41 00000000 E000E018 
                       NVIC_ST_CURRENT_R
                               EQU              0xE000E018
   42 00000000 00131000 
                       count   EQU              0x131000
   43 00000000 00000032 
                       countone
                               EQU              50
   44 00000000 00000032 
                       counttwo
                               EQU              50
   45 00000000 FFFFFFFF 
                       FILLone EQU              0xFFFFFFFF
   46 00000000 FFFFFFFF 
                       FILLtwo EQU              0xFFFFFFFF
   47 00000000                 THUMB
   48 00000000                 AREA             DATA, ALIGN=4
   49 00000000 00000032 
                       SIZE    EQU              50
   50 00000000         ;You MUST use these two buffers and two variables
   51 00000000         ;You MUST not change their names
   52 00000000         ;These names MUST be exported
   53 00000000                 EXPORT           DataBuffer
   54 00000000                 EXPORT           TimeBuffer
   55 00000000                 EXPORT           DataPt [DATA,SIZE=4]
   56 00000000                 EXPORT           TimePt [DATA,SIZE=4]
   57 00000000         
   58 00000000 00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 



ARM Macro Assembler    Page 3 


              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00    DataBuffer
                               SPACE            SIZE*4
   59 000000C8 00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 



ARM Macro Assembler    Page 4 


              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 



ARM Macro Assembler    Page 5 


              00 00 00 
              00 00 00 
              00 00 00 
              00 00    TimeBuffer
                               SPACE            SIZE*4
   60 00000190 00 00 00 
              00       DataPt  SPACE            4
   61 00000194 00 00 00 
              00       TimePt  SPACE            4
   62 00000198         
   63 00000198                 ALIGN
   64 00000198                 PRESERVE8
   65 00000198                 AREA             |.text|, CODE, READONLY, ALIGN=
2
   66 00000000                 THUMB
   67 00000000                 EXPORT           Start
   68 00000000                 IMPORT           TExaS_Init
   69 00000000                 IMPORT           SysTick_Init
   70 00000000         
   71 00000000         
   72 00000000 F7FF FFFE 
                       Start   BL               TExaS_Init
   73 00000004         ;Initializes memory dump and initializes SysTick
   74 00000004 F000 F858       BL               Debug_Init  ; running at 80 MHz
                                                            , scope voltmeter o
                                                            n PD3
   75 00000008         ;Port E Initialization
   76 00000008 4955            LDR              R1, =SYSCTL_RCGCGPIO_R 
                                                            ;initialize port E
   77 0000000A 6808            LDR              R0, [R1]
   78 0000000C F040 0010       ORR              R0, R0, #0x10
   79 00000010 6008            STR              R0, [R1]
   80 00000012 BF00            NOP
   81 00000014 BF00            NOP
   82 00000016 BF00            NOP
   83 00000018 BF00            NOP
   84 0000001A 4952            LDR              R1, =GPIO_PORTE_DEN_R
   85 0000001C F040 0003       ORR              R0, #0x03
   86 00000020 6008            STR              R0, [R1]
   87 00000022 4951            LDR              R1, =GPIO_PORTE_AFSEL_R
   88 00000024 F020 0003       BIC              R0, #0x03
   89 00000028 6008            STR              R0, [R1]
   90 0000002A 4950            LDR              R1, =GPIO_PORTE_DIR_R ;pin 0 ou
                                                            tput, pin 1 input
   91 0000002C F040 0001       ORR              R0, #0x01
   92 00000030 F020 0002       BIC              R0, #0x02
   93 00000034 6008            STR              R0, [R1]
   94 00000036         ;Port F Initialization
   95 00000036 494A            LDR              R1, =SYSCTL_RCGCGPIO_R
   96 00000038 6808            LDR              R0, [R1]
   97 0000003A F040 0020       ORR              R0, #0x20
   98 0000003E 6008            STR              R0, [R1]
   99 00000040 BF00            NOP
  100 00000042 BF00            NOP
  101 00000044 494A            LDR              R1, =GPIO_PORTF_DIR_R
  102 00000046 6800            LDR              R0, [R0]
  103 00000048 F040 0004       ORR              R0, #0x04
  104 0000004C 6008            STR              R0, [R1]
  105 0000004E 4949            LDR              R1, =GPIO_PORTF_AFSEL_R



ARM Macro Assembler    Page 6 


  106 00000050 6808            LDR              R0, [R1]
  107 00000052 F000 00FB       AND              R0, #0xFB
  108 00000056 6008            STR              R0, [R1]
  109 00000058 4947            LDR              R1, =GPIO_PORTF_DEN_R
  110 0000005A 6808            LDR              R0, [R1]
  111 0000005C F040 0004       ORR              R0, #0x04
  112 00000060 6008            STR              R0, [R1]
  113 00000062         
  114 00000062         
  115 00000062 B662            CPSIE            I           ; TExaS voltmeter, 
                                                            scope runs on inter
                                                            rupts
  116 00000064         
  117 00000064         loop
  118 00000064 F000 F852       BL               Debug_Capture
  119 00000068 F000 F822       BL               delay
  120 0000006C         ;heartbeat
  121 0000006C 4843            LDR              R0,=GPIO_PORTF_DATA_R
  122 0000006E 6801            LDR              R1, [R0]
  123 00000070 460A            MOV              R2, R1      ;R2 = original data
                                                            
  124 00000072 F001 0104       AND              R1, #0x04   ;clear all but PF2
  125 00000076 F081 0104       EOR              R1, #0x04   ;toggle PF2
  126 0000007A F022 0204       BIC              R2, #0x04
  127 0000007E EA41 0202       ORR              R2, R1, R2
  128 00000082 6002            STR              R2, [R0]
  129 00000084         
  130 00000084         ;input PE1 test output PE0
  131 00000084 483E            LDR              R0,=GPIO_PORTE_DATA_R
  132 00000086 6801            LDR              R1, [R0]    ;read the switch (R
                                                            1 = adjusting PE0)
  133 00000088 460A            MOV              R2, R1      ;R2 = checking PE1
  134 0000008A 460B            MOV              R3, R1      ;R3 = original data
                                                            
  135 0000008C F002 0202       AND              R2, #0x02   ;clear all but PE1
  136 00000090 3A02            SUBS             R2, #0x02   ;branch taken if PE
                                                            1 = 0
  137 00000092         
  138 00000092 D109            BNE              SETON       ;if PE1 = 0, turn o
                                                            n LED
  139 00000094 F001 0101       AND              R1, #0x01   ;clear all but PE0
  140 00000098 F081 0101       EOR              R1, #0x01   ;toggle PE0
  141 0000009C F023 0301       BIC              R3, #0x01   ;clear original PE0
                                                            
  142 000000A0 EA41 0303       ORR              R3, R1, R3  ;recombine
  143 000000A4 6003            STR              R3, [R0]
  144 000000A6 E7DD            B                loop
  145 000000A8         
  146 000000A8         SETON
  147 000000A8 F043 0301       ORR              R3, #0x01
  148 000000AC 6003            STR              R3, [R0]
  149 000000AE E7D9            B                loop
  150 000000B0         
  151 000000B0         
  152 000000B0         
  153 000000B0         delay
  154 000000B0 4A34            LDR              R2, =count
  155 000000B2         
  156 000000B2         again



ARM Macro Assembler    Page 7 


  157 000000B2 1E52            SUBS             R2,R2, #0x01
  158 000000B4 D1FD            BNE              again
  159 000000B6 4770            BX               LR
  160 000000B8         
  161 000000B8         
  162 000000B8         
  163 000000B8         ;------------Debug_Init------------
  164 000000B8         ; Initializes the debugging instrument
  165 000000B8         ; Input: none
  166 000000B8         ; Output: none
  167 000000B8         ; Modifies: none
  168 000000B8         ; Note: push/pop an even number of registers so C compil
                       er is happy
  169 000000B8         Debug_Init
  170 000000B8 B500            PUSH{R14}
  171 000000BA E92D 1001       PUSH{R0,R12}
  172 000000BE 4932            LDR              R1, =DataBuffer ;initialize poi
                                                            nters by filling th
                                                            em with starting lo
                                                            cations
  173 000000C0 4832            LDR              R0, =DataPt
  174 000000C2 6001            STR              R1, [R0]
  175 000000C4 4932            LDR              R1, =TimeBuffer
  176 000000C6 4833            LDR              R0, =TimePt
  177 000000C8 6001            STR              R1, [R0]
  178 000000CA         
  179 000000CA F04F 0032       LDR              R0, =countone ;R0 is the count
  180 000000CE F04F 32FF       LDR              R2, =FILLone
  181 000000D2 492E            LDR              R1, =DataPt
  182 000000D4 6809            LDR              R1, [R1]
  183 000000D6         
  184 000000D6         againinit
  185 000000D6         ;pointer
  186 000000D6 600A            STR              R2, [R1]    ;fill DataBuffer ar
                                                            ray with 0xFFFFFFFF
                                                            
  187 000000D8 F101 0104       ADD              R1, #0x04
  188 000000DC F1A0 0001       SUB              R0, #0x01
  189 000000E0 2800            CMP              R0, #0
  190 000000E2 D1F8            BNE              againinit
  191 000000E4 F04F 0032       LDR              R0, =counttwo
  192 000000E8 F04F 32FF       LDR              R2, =FILLtwo
  193 000000EC 4929            LDR              R1, =TimePt
  194 000000EE 6809            LDR              R1, [R1]
  195 000000F0         
  196 000000F0         againinittwo
  197 000000F0         
  198 000000F0         
  199 000000F0 600A            STR              R2, [R1]    ;fill TimeBuffer ar
                                                            ray with 0xFFFFFFFF
                                                            
  200 000000F2 F101 0104       ADD              R1, #0x04
  201 000000F6 F1A0 0001       SUB              R0, #0x01
  202 000000FA 2800            CMP              R0, #0
  203 000000FC D1F8            BNE              againinittwo
  204 000000FE         
  205 000000FE F7FF FFFE       BL               SysTick_Init
  206 00000102 E8BD 1001       POP{R0,R12}
  207 00000106 F85D EB04       POP{R14}



ARM Macro Assembler    Page 8 


  208 0000010A 4770            BX               LR
  209 0000010C         
  210 0000010C         
  211 0000010C         ;------------Debug_Capture------------
  212 0000010C         ; Dump Port E and time into buffers
  213 0000010C         ; Input: none
  214 0000010C         ; Output: none
  215 0000010C         ; Modifies: none
  216 0000010C         ; Note: push/pop an even number of registers so C compil
                       er is happy
  217 0000010C         Debug_Capture
  218 0000010C B500            PUSH{R14}
  219 0000010E E92D 1001       PUSH{R0,R12}
  220 00000112 F04F 0032       LDR              R0, =countone
  221 00000116 6801            LDR              R1, [R0]    ;If we have already
                                                             filled the array w
                                                            e return to main
  222 00000118 F1A1 0101       SUB              R1, #0x01
  223 0000011C 2900            CMP              R1, #0
  224 0000011E D919            BLS              stop
  225 00000120 6001            STR              R1, [R0]
  226 00000122 4917            LDR              R1, =GPIO_PORTE_DATA_R
  227 00000124 6808            LDR              R0, [R1]
  228 00000126 4602            MOV              R2, R0
  229 00000128 F002 0202       AND              R2, #0x02
  230 0000012C F000 0001       AND              R0, #0x01
  231 00000130 EA4F 02C2       LSL              R2, #3
  232 00000134 EA40 0002       ORR              R0, R0, R2  ;R0 is data to stor
                                                            e
  233 00000138 4914            LDR              R1, =DataPt
  234 0000013A 680A            LDR              R2, [R1]
  235 0000013C 6010            STR              R0, [R2]
  236 0000013E F102 0204       ADD              R2, #0x04
  237 00000142 600A            STR              R2, [R1]
  238 00000144 4914            LDR              R1, =NVIC_ST_CURRENT_R
  239 00000146 6808            LDR              R0, [R1]
  240 00000148 4A12            LDR              R2, =TimePt
  241 0000014A 6813            LDR              R3, [R2]
  242 0000014C 6018            STR              R0, [R3]
  243 0000014E         
  244 0000014E F103 0304       ADD              R3, #0x04
  245 00000152 6013            STR              R3, [R2]
  246 00000154         stop
  247 00000154 E8BD 1001       POP{R0,R12}
  248 00000158 F85D EB04       POP{R14}
  249 0000015C 4770            BX               LR
  250 0000015E         
  251 0000015E         
  252 0000015E         
  253 0000015E         
  254 0000015E 00 00           ALIGN                        ; make sure the end
                                                             of this section is
                                                             aligned
  255 00000160                 END                          ; end of file
              400FE608 
              4002451C 
              40024420 
              40024400 
              40025400 



ARM Macro Assembler    Page 9 


              40025420 
              4002551C 
              400253FC 
              400243FC 
              00131000 
              00000000 
              00000000 
              00000000 
              00000000 
              E000E018 
Command Line: --debug --xref --cpu=Cortex-M4 --apcs=interwork --depend=.\main.d
 -o.\main.o -IC:\Keil\ARM\RV31\INC -IC:\Keil\ARM\CMSIS\Include -IC:\Keil\ARM\In
c\Luminary --predefine="__EVAL SETA 1" --list=.\main.lst main.s



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
Relocatable symbols

DATA 00000000

Symbol: DATA
   Definitions
      At line 48 in file main.s
   Uses
      None
Comment: DATA unused
DataBuffer 00000000

Symbol: DataBuffer
   Definitions
      At line 58 in file main.s
   Uses
      At line 53 in file main.s
      At line 172 in file main.s

DataPt 00000190

Symbol: DataPt
   Definitions
      At line 60 in file main.s
   Uses
      At line 55 in file main.s
      At line 173 in file main.s
      At line 181 in file main.s
      At line 233 in file main.s

TimeBuffer 000000C8

Symbol: TimeBuffer
   Definitions
      At line 59 in file main.s
   Uses
      At line 54 in file main.s
      At line 175 in file main.s

TimePt 00000194

Symbol: TimePt
   Definitions
      At line 61 in file main.s
   Uses
      At line 56 in file main.s
      At line 176 in file main.s
      At line 193 in file main.s
      At line 240 in file main.s

5 symbols



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
Relocatable symbols

.text 00000000

Symbol: .text
   Definitions
      At line 65 in file main.s
   Uses
      None
Comment: .text unused
Debug_Capture 0000010C

Symbol: Debug_Capture
   Definitions
      At line 217 in file main.s
   Uses
      At line 118 in file main.s
Comment: Debug_Capture used once
Debug_Init 000000B8

Symbol: Debug_Init
   Definitions
      At line 169 in file main.s
   Uses
      At line 74 in file main.s
Comment: Debug_Init used once
SETON 000000A8

Symbol: SETON
   Definitions
      At line 146 in file main.s
   Uses
      At line 138 in file main.s
Comment: SETON used once
Start 00000000

Symbol: Start
   Definitions
      At line 72 in file main.s
   Uses
      At line 67 in file main.s
Comment: Start used once
again 000000B2

Symbol: again
   Definitions
      At line 156 in file main.s
   Uses
      At line 158 in file main.s
Comment: again used once
againinit 000000D6

Symbol: againinit
   Definitions
      At line 184 in file main.s
   Uses
      At line 190 in file main.s
Comment: againinit used once
againinittwo 000000F0

Symbol: againinittwo



ARM Macro Assembler    Page 2 Alphabetic symbol ordering
Relocatable symbols

   Definitions
      At line 196 in file main.s
   Uses
      At line 203 in file main.s
Comment: againinittwo used once
delay 000000B0

Symbol: delay
   Definitions
      At line 153 in file main.s
   Uses
      At line 119 in file main.s
Comment: delay used once
loop 00000064

Symbol: loop
   Definitions
      At line 117 in file main.s
   Uses
      At line 144 in file main.s
      At line 149 in file main.s

stop 00000154

Symbol: stop
   Definitions
      At line 246 in file main.s
   Uses
      At line 224 in file main.s
Comment: stop used once
11 symbols



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
Absolute symbols

FILLone FFFFFFFF

Symbol: FILLone
   Definitions
      At line 45 in file main.s
   Uses
      At line 180 in file main.s
Comment: FILLone used once
FILLtwo FFFFFFFF

Symbol: FILLtwo
   Definitions
      At line 46 in file main.s
   Uses
      At line 192 in file main.s
Comment: FILLtwo used once
GPIO_PORTE_AFSEL_R 40024420

Symbol: GPIO_PORTE_AFSEL_R
   Definitions
      At line 32 in file main.s
   Uses
      At line 87 in file main.s
Comment: GPIO_PORTE_AFSEL_R used once
GPIO_PORTE_DATA_R 400243FC

Symbol: GPIO_PORTE_DATA_R
   Definitions
      At line 30 in file main.s
   Uses
      At line 131 in file main.s
      At line 226 in file main.s

GPIO_PORTE_DEN_R 4002451C

Symbol: GPIO_PORTE_DEN_R
   Definitions
      At line 34 in file main.s
   Uses
      At line 84 in file main.s
Comment: GPIO_PORTE_DEN_R used once
GPIO_PORTE_DIR_R 40024400

Symbol: GPIO_PORTE_DIR_R
   Definitions
      At line 31 in file main.s
   Uses
      At line 90 in file main.s
Comment: GPIO_PORTE_DIR_R used once
GPIO_PORTE_PUR_R 40024510

Symbol: GPIO_PORTE_PUR_R
   Definitions
      At line 33 in file main.s
   Uses
      None
Comment: GPIO_PORTE_PUR_R unused
GPIO_PORTF_AFSEL_R 40025420




ARM Macro Assembler    Page 2 Alphabetic symbol ordering
Absolute symbols

Symbol: GPIO_PORTF_AFSEL_R
   Definitions
      At line 37 in file main.s
   Uses
      At line 105 in file main.s
Comment: GPIO_PORTF_AFSEL_R used once
GPIO_PORTF_DATA_R 400253FC

Symbol: GPIO_PORTF_DATA_R
   Definitions
      At line 35 in file main.s
   Uses
      At line 121 in file main.s
Comment: GPIO_PORTF_DATA_R used once
GPIO_PORTF_DEN_R 4002551C

Symbol: GPIO_PORTF_DEN_R
   Definitions
      At line 38 in file main.s
   Uses
      At line 109 in file main.s
Comment: GPIO_PORTF_DEN_R used once
GPIO_PORTF_DIR_R 40025400

Symbol: GPIO_PORTF_DIR_R
   Definitions
      At line 36 in file main.s
   Uses
      At line 101 in file main.s
Comment: GPIO_PORTF_DIR_R used once
LED 40024008

Symbol: LED
   Definitions
      At line 26 in file main.s
   Uses
      None
Comment: LED unused
NVIC_ST_CTRL_R E000E010

Symbol: NVIC_ST_CTRL_R
   Definitions
      At line 39 in file main.s
   Uses
      None
Comment: NVIC_ST_CTRL_R unused
NVIC_ST_CURRENT_R E000E018

Symbol: NVIC_ST_CURRENT_R
   Definitions
      At line 41 in file main.s
   Uses
      At line 238 in file main.s
Comment: NVIC_ST_CURRENT_R used once
NVIC_ST_RELOAD_R E000E014

Symbol: NVIC_ST_RELOAD_R
   Definitions
      At line 40 in file main.s



ARM Macro Assembler    Page 3 Alphabetic symbol ordering
Absolute symbols

   Uses
      None
Comment: NVIC_ST_RELOAD_R unused
SIZE 00000032

Symbol: SIZE
   Definitions
      At line 49 in file main.s
   Uses
      At line 58 in file main.s
      At line 59 in file main.s

SWITCH 40024004

Symbol: SWITCH
   Definitions
      At line 25 in file main.s
   Uses
      None
Comment: SWITCH unused
SYSCTL_RCGC2_GPIOE 00000010

Symbol: SYSCTL_RCGC2_GPIOE
   Definitions
      At line 28 in file main.s
   Uses
      None
Comment: SYSCTL_RCGC2_GPIOE unused
SYSCTL_RCGC2_GPIOF 00000020

Symbol: SYSCTL_RCGC2_GPIOF
   Definitions
      At line 29 in file main.s
   Uses
      None
Comment: SYSCTL_RCGC2_GPIOF unused
SYSCTL_RCGCGPIO_R 400FE608

Symbol: SYSCTL_RCGCGPIO_R
   Definitions
      At line 27 in file main.s
   Uses
      At line 76 in file main.s
      At line 95 in file main.s

count 00131000

Symbol: count
   Definitions
      At line 42 in file main.s
   Uses
      At line 154 in file main.s
Comment: count used once
countone 00000032

Symbol: countone
   Definitions
      At line 43 in file main.s
   Uses



ARM Macro Assembler    Page 4 Alphabetic symbol ordering
Absolute symbols

      At line 179 in file main.s
      At line 220 in file main.s

counttwo 00000032

Symbol: counttwo
   Definitions
      At line 44 in file main.s
   Uses
      At line 191 in file main.s
Comment: counttwo used once
23 symbols



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
External symbols

SysTick_Init 00000000

Symbol: SysTick_Init
   Definitions
      At line 69 in file main.s
   Uses
      At line 205 in file main.s
Comment: SysTick_Init used once
TExaS_Init 00000000

Symbol: TExaS_Init
   Definitions
      At line 68 in file main.s
   Uses
      At line 72 in file main.s
Comment: TExaS_Init used once
2 symbols
374 symbols in table
