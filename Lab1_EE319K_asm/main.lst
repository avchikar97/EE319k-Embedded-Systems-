


ARM Macro Assembler    Page 1 


    1 00000000         ;****************** main.s ***************
    2 00000000         ; Program written by: Akaash Chikarmane
    3 00000000         ; Date Created: 1/22/2016 
    4 00000000         ; Last Modified: 1/30/2016 
    5 00000000         ; Section: Tuesday 2-3
    6 00000000         ; EID: avc536
    7 00000000         ; Instructor: Ramesh Yerraballi
    8 00000000         ; Lab number: 1
    9 00000000         ; Brief description of the program
   10 00000000         ; The overall objective of this system is a digital lock
                       
   11 00000000         ; Hardware connections
   12 00000000         ;  PE3 is switch input  (1 means switch is not pressed, 
                       0 means switch is pressed)
   13 00000000         ;  PE4 is switch input  (1 means switch is not pressed, 
                       0 means switch is pressed)
   14 00000000         ;  PE5 is switch input  (1 means switch is not pressed, 
                       0 means switch is pressed)
   15 00000000         ;  PE2 is LED output (0 means door is locked, 1 means do
                       or is unlocked) 
   16 00000000         ; The specific operation of this system is to 
   17 00000000         ;   unlock if all three switches are pressed
   18 00000000         
   19 00000000 400243FC 
                       GPIO_PORTE_DATA_R
                               EQU              0x400243FC
   20 00000000 40024400 
                       GPIO_PORTE_DIR_R
                               EQU              0x40024400
   21 00000000 40024420 
                       GPIO_PORTE_AFSEL_R
                               EQU              0x40024420
   22 00000000 4002451C 
                       GPIO_PORTE_DEN_R
                               EQU              0x4002451C
   23 00000000 40024528 
                       GPIO_PORTE_AMSEL_R
                               EQU              0x40024528
   24 00000000 4002452C 
                       GPIO_PORTE_PCTL_R
                               EQU              0x4002452C
   25 00000000 400FE108 
                       SYSCTL_RCGC2_R
                               EQU              0x400FE108
   26 00000000 400FE608 
                       SYSCTL_RCGCGPIO_R
                               EQU              0x400FE608
   27 00000000         
   28 00000000                 AREA             |.text|, CODE, READONLY, ALIGN=
2
   29 00000000                 THUMB
   30 00000000                 EXPORT           Start
   31 00000000         Start
   32 00000000 481C            LDR              R0,=SYSCTL_RCGCGPIO_R 
                                                            ;R0 = clock
   33 00000002 6801            LDR              R1,[R0]     ;read clock into R1
                                                            
   34 00000004 F041 0110       ORR              R1,#0x10    ;turn on clock E (0
                                                            001 0000)



ARM Macro Assembler    Page 2 


   35 00000008 6001            STR              R1,[R0]     ;write back in
   36 0000000A BF00            NOP                          ;stabilize clock
   37 0000000C BF00            NOP
   38 0000000E         
   39 0000000E 481A            LDR              R0,=GPIO_PORTE_DEN_R 
                                                            ;enable digital I/O
                                                            
   40 00000010 6801            LDR              R1, [R0]
   41 00000012 F041 013C       ORR              R1, #0x3C   ;digital for 2,3,4,
                                                            5 (0011 1100)
   42 00000016 6001            STR              R1, [R0]
   43 00000018         
   44 00000018 4818            LDR              R0,=GPIO_PORTE_AMSEL_R ;disable
                                                             analog I/O (not al
                                                            ternate functions)
   45 0000001A 6801            LDR              R1, [R0]
   46 0000001C F001 01C3       AND              R1, #0xC3   ;complement of the 
                                                            above one (1100 001
                                                            1)
   47 00000020 6001            STR              R1, [R0]
   48 00000022         
   49 00000022 4817            LDR              R0,=GPIO_PORTE_DIR_R ;changing 
                                                            the direction
   50 00000024 6801            LDR              R1,[R0]
   51 00000026 F041 0104       ORR              R1,#0x04    ;PE2 is output (000
                                                            0 0100)
   52 0000002A F021 0138       BIC              R1,#0x38    ;PE3,4,5 is input (
                                                            0011 1000)
   53 0000002E 6001            STR              R1, [R0]
   54 00000030         
   55 00000030 4814            LDR              R0,=GPIO_PORTE_AFSEL_R ;alterna
                                                            te functions
   56 00000032 6801            LDR              R1,[R0]
   57 00000034 F021 013C       BIC              R1,#0x3C    ;clear AF for PE5,P
                                                            E4 (0011 1100)
   58 00000038 6001            STR              R1,[R0]
   59 0000003A         loop
   60 0000003A 4813            LDR              R0,=GPIO_PORTE_DATA_R
   61 0000003C 6801            LDR              R1,[R0]
   62 0000003E 460A            MOV              R2, R1      ;Copy the data. Mod
                                                            ifying R1 then comb
                                                            ining with original
                                                             (R2).
   63 00000040 F081 013C       EOR              R1, R1, #0x3C ;R1 for bit 3
   64 00000044 460B            MOV              R3, R1      ;R3 for bit 4
   65 00000046 460C            MOV              R4, R1      ;R4 for bit 5
   66 00000048         
   67 00000048 EA4F 0151       LSR              R1, #1      ;Move 3 to bit 2 an
                                                            d mask
   68 0000004C F001 0104       AND              R1, #0x04
   69 00000050 EA4F 0393       LSR              R3, #2      ;Move 4 to bit 2 an
                                                            d mask
   70 00000054 F003 0304       AND              R3, #0x04
   71 00000058 EA4F 04D4       LSR              R4, #3      ;Move 5 to bit 2 an
                                                            d mask
   72 0000005C F004 0404       AND              R4, #0x04
   73 00000060         
   74 00000060 EA01 0103       AND              R1, R1, R3  ;Absorb(AND) bit 4
   75 00000064 EA01 0104       AND              R1, R1, R4  ;Absorb(AND) bit 5



ARM Macro Assembler    Page 3 


   76 00000068 F022 0204       BIC              R2, R2, #0x04 ;Clear the origin
                                                            al bit 2
   77 0000006C EA41 0102       ORR              R1, R1, R2  ;Combine with origi
                                                            nal
   78 00000070 6001            STR              R1,[R0]     ;write back in
   79 00000072 E7E2            B                loop
   80 00000074         
   81 00000074         
   82 00000074                 ALIGN                        ; make sure the end
                                                             of this section is
                                                             aligned
   83 00000074                 END                          ; end of file
              400FE608 
              4002451C 
              40024528 
              40024400 
              40024420 
              400243FC 
Command Line: --debug --xref --cpu=Cortex-M4 --apcs=interwork --depend=.\main.d
 -o.\main.o -IC:\Keil\ARM\RV31\INC -IC:\Keil\ARM\CMSIS\Include -IC:\Keil\ARM\In
c\Luminary --predefine="__EVAL SETA 1" --list=.\main.lst main.s



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
Relocatable symbols

.text 00000000

Symbol: .text
   Definitions
      At line 28 in file main.s
   Uses
      None
Comment: .text unused
Start 00000000

Symbol: Start
   Definitions
      At line 31 in file main.s
   Uses
      At line 30 in file main.s
Comment: Start used once
loop 0000003A

Symbol: loop
   Definitions
      At line 59 in file main.s
   Uses
      At line 79 in file main.s
Comment: loop used once
3 symbols



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
Absolute symbols

GPIO_PORTE_AFSEL_R 40024420

Symbol: GPIO_PORTE_AFSEL_R
   Definitions
      At line 21 in file main.s
   Uses
      At line 55 in file main.s
Comment: GPIO_PORTE_AFSEL_R used once
GPIO_PORTE_AMSEL_R 40024528

Symbol: GPIO_PORTE_AMSEL_R
   Definitions
      At line 23 in file main.s
   Uses
      At line 44 in file main.s
Comment: GPIO_PORTE_AMSEL_R used once
GPIO_PORTE_DATA_R 400243FC

Symbol: GPIO_PORTE_DATA_R
   Definitions
      At line 19 in file main.s
   Uses
      At line 60 in file main.s
Comment: GPIO_PORTE_DATA_R used once
GPIO_PORTE_DEN_R 4002451C

Symbol: GPIO_PORTE_DEN_R
   Definitions
      At line 22 in file main.s
   Uses
      At line 39 in file main.s
Comment: GPIO_PORTE_DEN_R used once
GPIO_PORTE_DIR_R 40024400

Symbol: GPIO_PORTE_DIR_R
   Definitions
      At line 20 in file main.s
   Uses
      At line 49 in file main.s
Comment: GPIO_PORTE_DIR_R used once
GPIO_PORTE_PCTL_R 4002452C

Symbol: GPIO_PORTE_PCTL_R
   Definitions
      At line 24 in file main.s
   Uses
      None
Comment: GPIO_PORTE_PCTL_R unused
SYSCTL_RCGC2_R 400FE108

Symbol: SYSCTL_RCGC2_R
   Definitions
      At line 25 in file main.s
   Uses
      None
Comment: SYSCTL_RCGC2_R unused
SYSCTL_RCGCGPIO_R 400FE608

Symbol: SYSCTL_RCGCGPIO_R



ARM Macro Assembler    Page 2 Alphabetic symbol ordering
Absolute symbols

   Definitions
      At line 26 in file main.s
   Uses
      At line 32 in file main.s
Comment: SYSCTL_RCGCGPIO_R used once
8 symbols
344 symbols in table
