


ARM Macro Assembler    Page 1 


    1 00000000         ; LCD.s
    2 00000000         ; Student names: change this to your names or look very 
                       silly
    3 00000000         ; Last modification date: change this to the last modifi
                       cation date or look very silly
    4 00000000         
    5 00000000         ; Runs on LM4F120/TM4C123
    6 00000000         ; Use SSI0 to send an 8-bit code to the ST7735 160x128 p
                       ixel LCD.
    7 00000000         
    8 00000000         ; As part of Lab 7, students need to implement these LCD
                       _WriteCommand and LCD_WriteData
    9 00000000         ; This driver assumes two low-level LCD functions
   10 00000000         
   11 00000000         ; Backlight (pin 10) connected to +3.3 V
   12 00000000         ; MISO (pin 9) unconnected
   13 00000000         ; SCK (pin 8) connected to PA2 (SSI0Clk)
   14 00000000         ; MOSI (pin 7) connected to PA5 (SSI0Tx)
   15 00000000         ; TFT_CS (pin 6) connected to PA3 (SSI0Fss)
   16 00000000         ; CARD_CS (pin 5) unconnected
   17 00000000         ; Data/Command (pin 4) connected to PA6 (GPIO)
   18 00000000         ; RESET (pin 3) connected to PA7 (GPIO)
   19 00000000         ; VCC (pin 2) connected to +3.3 V
   20 00000000         ; Gnd (pin 1) connected to ground
   21 00000000         
   22 00000000 40004100 
                       DC      EQU              0x40004100
   23 00000000 00000000 
                       DC_COMMAND
                               EQU              0
   24 00000000 00000040 
                       DC_DATA EQU              0x40
   25 00000000 40008008 
                       SSI0_DR_R
                               EQU              0x40008008
   26 00000000 4000800C 
                       SSI0_SR_R
                               EQU              0x4000800C
   27 00000000 00000004 
                       SSI_SR_RNE
                               EQU              0x00000004  ; SSI Receive FIFO 
                                                            Not Empty
   28 00000000 00000010 
                       SSI_SR_BSY
                               EQU              0x00000010  ; SSI Busy Bit
   29 00000000 00000002 
                       SSI_SR_TNF
                               EQU              0x00000002  ; SSI Transmit FIFO
                                                             Not Full
   30 00000000 400043FC 
                       GPIO_PORTA_DATA_R
                               EQU              0x400043FC
   31 00000000         
   32 00000000                 EXPORT           writecommand
   33 00000000                 EXPORT           writedata
   34 00000000         
   35 00000000                 AREA             |.text|, CODE, READONLY, ALIGN=
2
   36 00000000                 THUMB



ARM Macro Assembler    Page 2 


   37 00000000                 ALIGN
   38 00000000         
   39 00000000         ; The Data/Command pin must be valid when the eighth bit
                        is
   40 00000000         ; sent.  The SSI module has hardware input and output FI
                       FOs
   41 00000000         ; that are 8 locations deep.  Based on the observation t
                       hat
   42 00000000         ; the LCD interface tends to send a few commands and the
                       n a
   43 00000000         ; lot of data, the FIFOs are not used when writing
   44 00000000         ; commands, and they are used when writing data.  This
   45 00000000         ; ensures that the Data/Command pin status matches the b
                       yte
   46 00000000         ; that is actually being transmitted.
   47 00000000         ; The write command operation waits until all data has b
                       een
   48 00000000         ; sent, configures the Data/Command pin for commands, se
                       nds
   49 00000000         ; the command, and then waits for the transmission to
   50 00000000         ; finish.
   51 00000000         ; The write data operation waits until there is room in 
                       the
   52 00000000         ; transmit FIFO, configures the Data/Command pin for dat
                       a,
   53 00000000         ; and then adds the data to the transmit FIFO.
   54 00000000         ; NOTE: These functions will crash or stall indefinitely
                        if
   55 00000000         ; the SSI0 module is not initialized and enabled.
   56 00000000         
   57 00000000         ; This is a helper function that sends an 8-bit command 
                       to the LCD.
   58 00000000         ; Input: R0  8-bit command to transmit
   59 00000000         ; Output: none
   60 00000000         ; Assumes: SSI0 and port A have already been initialized
                        and enabled
   61 00000000         writecommand
   62 00000000 4910            LDR              R1,=SSI0_SR_R ;1) Read SSI0_SR_
                                                            R and check bit 4, 
                                                            
   63 00000002 680A            LDR              R2, [R1]
   64 00000004 F002 0210       AND              R2, #0x10
   65 00000008 2A10            CMP              R2, #0x10
   66 0000000A D0FE            BEQ              writecommand ;2) If bit 4 is hi
                                                            gh, loop back to st
                                                            ep 1 (wait for BUSY
                                                             bit to be low)
   67 0000000C 490E            LDR              R1,=GPIO_PORTA_DATA_R ;3) Clear
                                                             D/C=PA6 to zero
   68 0000000E 680A            LDR              R2, [R1]
   69 00000010 F022 0240       BIC              R2, #0x40
   70 00000014 600A            STR              R2, [R1]
   71 00000016 490D            LDR              R1,=SSI0_DR_R ;4) Write the com
                                                            mand to SSI0_DR_R
   72 00000018 6008            STR              R0, [R1]
   73 0000001A         commandloop
   74 0000001A 490A            LDR              R1,=SSI0_SR_R ;5) Read SSI0_SR_
                                                            R and check bit 4, 
                                                            



ARM Macro Assembler    Page 3 


   75 0000001C 680A            LDR              R2, [R1]
   76 0000001E F002 0210       AND              R2, #0x10
   77 00000022 2A10            CMP              R2, #0x10
   78 00000024 D0F9            BEQ              commandloop ;6) If bit 4 is hig
                                                            h, loop back to ste
                                                            p 5 (wait for BUSY 
                                                            bit to be low)
   79 00000026 4770            BX               LR          ;   return
   80 00000028         
   81 00000028         ; This is a helper function that sends an 8-bit data to 
                       the LCD.
   82 00000028         ; Input: R0  8-bit data to transmit
   83 00000028         ; Output: none
   84 00000028         ; Assumes: SSI0 and port A have already been initialized
                        and enabled
   85 00000028         writedata
   86 00000028 4906            LDR              R1,=SSI0_SR_R ;1) Read SSI0_SR_
                                                            R and check bit 1, 
                                                            
   87 0000002A 680A            LDR              R2, [R1]
   88 0000002C F002 0202       AND              R2, #0x02
   89 00000030 2A00            CMP              R2, #0x00   ;2) If bit 1 is low
                                                             loop back to step 
                                                            1 (wait for TNF bit
                                                             to be high)
   90 00000032 D0FE            BEQ              writedata
   91 00000034 4904            LDR              R1,=GPIO_PORTA_DATA_R ;3) Set D
                                                            /C=PA6 to one
   92 00000036 680A            LDR              R2, [R1]
   93 00000038 F042 0240       ORR              R2, #0x40
   94 0000003C 600A            STR              R2, [R1]
   95 0000003E 4903            LDR              R1,=SSI0_DR_R ;4) Write the 8-b
                                                            it data to SSI0_DR_
                                                            R
   96 00000040 6008            STR              R0, [R1]
   97 00000042         
   98 00000042 4770            BX               LR          ;   return
   99 00000044         
  100 00000044         
  101 00000044         ;***************************************************
  102 00000044         ; This is a library for the Adafruit 1.8" SPI display.
  103 00000044         ; This library works with the Adafruit 1.8" TFT Breakout
                        w/SD card
  104 00000044         ; ----> http://www.adafruit.com/products/358
  105 00000044         ; as well as Adafruit raw 1.8" TFT display
  106 00000044         ; ----> http://www.adafruit.com/products/618
  107 00000044         ;
  108 00000044         ; Check out the links above for our tutorials and wiring
                        diagrams
  109 00000044         ; These displays use SPI to communicate, 4 or 5 pins are
                        required to
  110 00000044         ; interface (RST is optional)
  111 00000044         ; Adafruit invests time and resources providing this ope
                       n source code,
  112 00000044         ; please support Adafruit and open-source hardware by pu
                       rchasing
  113 00000044         ; products from Adafruit!
  114 00000044         ;
  115 00000044         ; Written by Limor Fried/Ladyada for Adafruit Industries



ARM Macro Assembler    Page 4 


                       .
  116 00000044         ; MIT license, all text above must be included in any re
                       distribution
  117 00000044         ;****************************************************
  118 00000044         
  119 00000044                 ALIGN                        ; make sure the end
                                                             of this section is
                                                             aligned
  120 00000044                 END                          ; end of file
              4000800C 
              400043FC 
              40008008 
Command Line: --debug --xref --cpu=Cortex-M4 --apcs=interwork --depend=.\lcd.d 
-o.\lcd.o -IC:\Keil\ARM\RV31\INC -IC:\Keil\ARM\CMSIS\Include -IC:\Keil\ARM\Inc\
Luminary --predefine="__EVAL SETA 1" --predefine="__MICROLIB SETA 1" --list=.\l
cd.lst LCD.s



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
Relocatable symbols

.text 00000000

Symbol: .text
   Definitions
      At line 35 in file LCD.s
   Uses
      None
Comment: .text unused
commandloop 0000001A

Symbol: commandloop
   Definitions
      At line 73 in file LCD.s
   Uses
      At line 78 in file LCD.s
Comment: commandloop used once
writecommand 00000000

Symbol: writecommand
   Definitions
      At line 61 in file LCD.s
   Uses
      At line 32 in file LCD.s
      At line 66 in file LCD.s

writedata 00000028

Symbol: writedata
   Definitions
      At line 85 in file LCD.s
   Uses
      At line 33 in file LCD.s
      At line 90 in file LCD.s

4 symbols



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
Absolute symbols

DC 40004100

Symbol: DC
   Definitions
      At line 22 in file LCD.s
   Uses
      None
Comment: DC unused
DC_COMMAND 00000000

Symbol: DC_COMMAND
   Definitions
      At line 23 in file LCD.s
   Uses
      None
Comment: DC_COMMAND unused
DC_DATA 00000040

Symbol: DC_DATA
   Definitions
      At line 24 in file LCD.s
   Uses
      None
Comment: DC_DATA unused
GPIO_PORTA_DATA_R 400043FC

Symbol: GPIO_PORTA_DATA_R
   Definitions
      At line 30 in file LCD.s
   Uses
      At line 67 in file LCD.s
      At line 91 in file LCD.s

SSI0_DR_R 40008008

Symbol: SSI0_DR_R
   Definitions
      At line 25 in file LCD.s
   Uses
      At line 71 in file LCD.s
      At line 95 in file LCD.s

SSI0_SR_R 4000800C

Symbol: SSI0_SR_R
   Definitions
      At line 26 in file LCD.s
   Uses
      At line 62 in file LCD.s
      At line 74 in file LCD.s
      At line 86 in file LCD.s

SSI_SR_BSY 00000010

Symbol: SSI_SR_BSY
   Definitions
      At line 28 in file LCD.s
   Uses
      None



ARM Macro Assembler    Page 2 Alphabetic symbol ordering
Absolute symbols

Comment: SSI_SR_BSY unused
SSI_SR_RNE 00000004

Symbol: SSI_SR_RNE
   Definitions
      At line 27 in file LCD.s
   Uses
      None
Comment: SSI_SR_RNE unused
SSI_SR_TNF 00000002

Symbol: SSI_SR_TNF
   Definitions
      At line 29 in file LCD.s
   Uses
      None
Comment: SSI_SR_TNF unused
9 symbols
347 symbols in table
